@model POSMVC.Models.PageModels.OrdersVM.CreateCCOrderVM


@{
    ViewData["Title"] = "CC Order";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">

    <div class="row">

        <div class="col-12">
            <div class="card mb-30">
                <div class="card-body pb-0">

                    <!-- #region NewCustomer and Search Section -->
                    <div class="justify-content-between align-items-center mb-20">
                        <h6 class="card-title mb-0">Cash & Carry Purchase</h6>
                        <br />
                        <div class="row">
                            <div class="col-md-6">
                                <button type="button" class="btn btn-sm btn-outline-success" onclick='openModalCreateForm("mdlCreateForm","CreateForm","Orders","CreateCustomer")'><i class="zmdi zmdi-collection-plus"></i> New Customer </button>
                            </div>
                            <div class="col-md-6 float-right">
                                <div class="input-group">
                                    <input class="form-control" name="mobile" type="search" placeholder="Search by mobile number" id="searchCustomer">
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- #endregion -->
                    <!-- #region Customer Section -->
                    <div class="row">
                        <div class="col-md-12">
                            <h6>Customer Details </h6>
                            <hr />
                        </div>
                        <br />
                        <div class="col-sm-12 col-md-12 col-lg-12">
                            <div>
                                <input type="hidden" class="form-control form-control-customized" asp-for="Users.Id" />
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-6">
                            <div>
                                <label class="control-label" asp-for="PersonalDetail.Name" id="pdName">Name: </label>
                                <input type="hidden" class="form-control form-control-customized" asp-for="PersonalDetail.Name" />
                            </div>
                            <div>
                                <label class="control-label" asp-for="PersonalDetail.Gender" id="pdGender">Gender: </label>
                                <input type="hidden" class="form-control form-control-customized" asp-for="PersonalDetail.Gender" />
                            </div>
                            <div>
                                <label class="control-label" asp-for="PersonalDetail.Address" id="pdAddress">Address: </label>
                                <input type="hidden" class="form-control form-control-customized" asp-for="PersonalDetail.Address" />
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 col-lg-6">
                            <div>
                                <label class="control-label" asp-for="PersonalDetail.Icno" id="pdIcNo">IC NO:</label>
                                <input type="hidden" class="form-control form-control-customized" asp-for="PersonalDetail.Icno" />
                            </div>
                            <div>
                                <label class="control-label" asp-for="PersonalDetail.MobileNo" id="pdMobileNo">Mobile: </label>
                                <input type="hidden" class="form-control form-control-customized" asp-for="PersonalDetail.MobileNo" />
                            </div>
                            <div>
                                <label class="control-label" asp-for="Users.Email" id="pdEmail">Email:</label>
                                <input type="hidden" class="form-control form-control-customized" asp-for="Users.Email" />
                            </div>
                        </div>
                        <hr />
                    </div>
                    <br />
                    <!-- #endregion -->
                    <!-- #region  Add to Cart Section-->
                    <div class="row">
                        <div class="col-md-12">
                            <h6> Order Item Details </h6>
                            <hr />
                        </div>
                        <div class="col-sm-12 col-md-4 col-lg-4">
                            <label class="control-label">Choose Product</label>
                            <select id="Products_Id" class="selectpicker show-tick show-menu-arrow form-control" data-size="10" title="Select Product" asp-items="ViewBag.Product" data-live-search="true">
                            </select>
                        </div>
                        <div class="col-sm-12 col-md-2 col-lg-2">
                            <label class="control-label" for="itemUnitPrice">Unit Price</label>
                            <input class="form-control form-control-customized" id="itemUnitPrice" name="itemUnitPrice" />

                        </div>
                        <div class="col-sm-12 col-md-2 col-lg-2">
                            <label class="control-label ">Quantity</label>
                            <input class="form-control form-control-customized" id="itemQty" name="itemQty"/>
                            <span class="text-danger"></span>
                        </div>
                        <div class="col-sm-12 col-md-2 col-lg-2">
                            <label class="control-label">Total</label>
                            <input class="form-control form-control-customized text-right" id="itemTotal" readonly />
                        </div>
                        <div class="col-sm-12 col-md-2 col-lg-2" style="padding-top:29px">
                            <button type="button" class="btn btn-sm btn-rounded btn-outline-info py-1" id="btnCart"><i class="zmdi zmdi-shopping-cart-plus"></i> Cart</button>
                            <button type="button" class="btn btn-sm btn-rounded btn-outline-danger py-1" id="btnClear"><i class="zmdi zmdi-format-clear"></i>Clear</button>
                        </div>

                    </div>
                    <br />
                    <!-- #endregion -->
                    <!-- #region  Cart List Preview Section-->
                    <div>
                        <div id='rowCartHeader' class="row" style="display:none">
                            <div class="col-sm-12 col-md-4 col-lg-4">
                                <label class="control-label"> Cart Items:</label>
                            </div>
                        </div>

                        <div id="cartPreview">

                        </div>

                        <hr />
                        <div id='rowCartTotal' class="row" style="display:none">
                            <div class="col-sm-4 col-md-4 col-lg-4">
                                <label class="control-label"><b>Total Cost</b></label>
                            </div>
                            <div class="col-sm-2 col-md-2 col-lg-2">
                            </div>
                            <div class="col-sm-2 col-md-2 col-lg-2">
                            </div>
                            <div class="col-sm-2 col-md-2 col-lg-2">
                                <label id="cartTotal" class="control-label pull-right"></label>
                            </div>
                            <div class="col-sm-2 col-md-2 col-lg-2">
                            </div>
                            <br />
                        </div>
                    </div>
                    <br />
                    <br />
                    <!-- #endregion -->


                    <div class="row">
                        <div class="input-group mb-3 col-md-6">

                        </div>
                        <div class="clearfix pb-2 col-md-6">
                            <button type="button" id="btnPlaceOrder" class="btn btn-sm btn-outline-success float-sm-right float-md-right float-lg-right">
                                <i id="icoPlaceOrder" class="zmdi zmdi-check"></i>
                                Place Order & Payment Proceed
                            </button>
                        </div>
                    </div>
                </div>


            </div>
        </div>
    </div>
    <!-- #region Modal Section for Customer -->
    <div class="modal fade" id="mdlCreateForm" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-modal="false">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title mt-0 font-16" id="myLargeModalLabel">Add New Customer</h5>
                    <button type="button" class="close" onclick='closeModalCreateForm("mdlCreateForm","CreateForm")'>
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="CreateForm">
                        <div class="text-center">
                            <img src="~/ProjectImage/loading.gif" alt="Loading ..." />

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- #endregion -->

</div>

@section Scripts{
    <script src="~/js/bootstrap-datepicker.min.js"></script>
    <script src="~/js/searchable-dropdown/bootstrap-select.js"></script>
    <script type="text/javascript">

        //All Global Variables
        var countOrderItem = 0;
        var availableQty = 0;
        var cartList = new Array();
        //~All Global Variables

        //Use For Dropdown Search
        $('.selectpicker').selectpicker({
            liveSearch: true,
            maxOptions: 1
        });

        //Use For Pagination
        $(document).ready(function () {
            $('ul.pagination > li.disabled > a').addClass('page-link');
        });

        //Use For autocomplete search 
        $('#searchCustomer').autocomplete({
            minLength: 2,
            source: '/Orders/CustomerSearch',

            select: function (event, ui) {
                var serverData = getJsonData("Orders", "CustomerSearchResult", ui.item.label, "GET");
                //Set Customer Values From Search

                cartList = new Array();
                toggleCartHeaderFooter(cartList);
                $('#cartPreview').empty();

                $('#Users_Id').val(serverData.users.id);
                $('#pdName').text("Name: " + serverData.personalDetail.name);
                $('#pdGender').text("Gender: " + serverData.personalDetail.gender);
                $('#pdAddress').text("Address: " + serverData.personalDetail.address);
                $('#pdIcNo').text("IC NO: " + serverData.personalDetail.icno);
                $('#pdMobileNo').text("Mobile: " + serverData.personalDetail.mobileNo);
                $('#pdEmail').text("Email: " + serverData.users.email);
            }
        });

        //Use For Get ProductData
        $('#Products_Id').on("change", () => {

            $('#itemQty').val("");
            $('#itemTotal').val("");

            var productData = { id: $("#Products_Id").val() };
            var serverData = getJsonData("Orders", "GetProduct", productData, 'GET');
            var unitPrice = serverData.product.sellingPrice;
            availableQty = serverData.stock.availableQuantity;
            $('#itemUnitPrice').val(unitPrice);
        });

        $('#itemQty').on("change", () => {
            var itemQty = $('#itemQty').val();
            if (!!(itemQty % 1)) {
                showMessage("Quantity as fraction is not allowed. ", "", "warning");
                return;
            }
            var itemUnitPrice = $('#itemUnitPrice').val();
            var total = itemQty * itemUnitPrice;
            $('#itemTotal').val(total);
        });

        $('#btnClear').on("click", () => {
            clearItem();
        });

        function clearItem() {
            $('#itemUnitPrice').val("");
            $('#itemQty').val("");
            $('#itemTotal').val("");
            $("#Products_Id").val('default').selectpicker("refresh");
        }

        $('#btnCart').on("click", () => {

            var userId = $('#Users_Id').val();
            if (userId === undefined || userId == 0 || userId == null) {
                showMessage("Customer is not selected. ", "", "warning");
                return;
            }

            var itemData = {
                productId: $("#Products_Id").val(),
                productLabel: $(".filter-option-inner-inner").text(),
                price: $('#itemUnitPrice').val(),
                quantity: parseInt($('#itemQty').val()),
                total: $('#itemTotal').val()
            };

            if (itemData.quantity > availableQty) {
                showMessage("Sorry, selected quantity is out of stock", "", "warning");
                return;
            }

            var actualProductLabel = itemData.productLabel.split("(");
            itemData.productLabel = actualProductLabel[0];
            if (itemData.productId > 0 && itemData.quantity > 0 && itemData.price >= 0) {

                itemData.countNo = countOrderItem;
                cartList.push(itemData);

                var drawItemPreview = `
                                                     <div id='rowNo${itemData.countNo}' class="row">
                                                        <div class="col-sm-4 col-md-4 col-lg-4">
                                                            <label class="control-label">${itemData.productLabel}</label>
                                                            <input type="hidden" name="ListOrderDetails[${itemData.countNo}].ProductId" value="${itemData.productId}" class="form-control form-control-customized" />
                                                        </div>
                                                        <div class="col-sm-2 col-md-2 col-lg-2">
                                                            <label class="control-label">$${itemData.price}</label>
                                                            <input type="hidden" name="ListOrderDetails[${itemData.countNo}].Price" value="${itemData.price}" class="form-control form-control-customized" />
                                                        </div>
                                                        <div class="col-sm-2 col-md-2 col-lg-2">
                                                            <label class="control-label ">${itemData.quantity}</label>
                                                            <input type="hidden" name="ListOrderDetails[${itemData.countNo}].Quantity" value="${itemData.quantity}" class="form-control form-control-customized" />
                                                        </div>
                                                        <div class="col-sm-2 col-md-2 col-lg-2">
                                                            <label class="control-label pull-right">$${itemData.total}</label>
                                                            <input type="hidden" name="ListOrderDetails[${itemData.countNo}].Total" value="${itemData.total}" class="form-control form-control-customized" />
                                                        </div>
                                                        <div class="col-sm-2 col-md-2 col-lg-2">
                                                            <button type="button" class="btn btn-sm btn-rounded btn-outline-danger py-1 px-3" title="Remove" onclick='removeItemFromCartList("rowNo${itemData.countNo}", "${itemData.countNo}")'><i class="zmdi zmdi-close"></i></button>
                                                        </div>
                                                    <br />
                                                    </div>`;
                countOrderItem += 1;
                toggleCartHeaderFooter(cartList);
                var sumOfTotal = cartList.map(o => o.total).reduce((a, c) => { return parseFloat(a) + parseFloat(c) }, 0);
                $('#cartPreview').append(drawItemPreview);
                $('#cartTotal').text("$" + sumOfTotal);
                clearItem();

            } else {
                showMessage("", "All item fields need to properly fill.", "info");
                return;
            }
            console.log("After Inserted...");
            console.log(cartList);
        });

        function toggleCartHeaderFooter(lst) {
            var lstCount = parseInt(lst.length);
            if (lstCount === undefined || lstCount == 0) {
                $('#rowCartHeader').hide();
                $('#rowCartTotal').hide();
            }
            else {
                $('#rowCartHeader').show();
                $('#rowCartTotal').show();
            }
        }

        function removeItemFromCartList(rowNumber, countNumber) {
            $('#' + rowNumber).remove();
            cartList = cartList.filter(f => f.countNo != countNumber);

            var cartListLength = parseInt(cartList.length);
            if (cartListLength === undefined || cartListLength == 0) {

                $('#cartTotal').text("$" + 0.00);
            }
            else {
                var sumOfTotal = cartList.map(o => o.total).reduce((a, c) => { return parseFloat(a) + parseFloat(c); }, 0);
                $('#cartTotal').text("$" + sumOfTotal);
            }
            toggleCartHeaderFooter(cartList);
        }

        $('#btnPlaceOrder').on("click", () => {

            var userId = $('#Users_Id').val();
            if (userId === undefined || userId == 0 || userId == null) {
                showMessage("Customer is not selected. ", "", "warning");
                return;
            }

            modelObject = {
                users: {
                    id: userId
                },
                listOrderDetails: cartList
            };

            var cartListLength = parseInt(cartList.length);
            if (cartListLength === undefined || cartListLength == 0) {
                showMessage("Atleast one item is require to place order ", "", "warning");
                return;
            }

            insertRecordWithoutForm("Orders", "CreateCCOrder", modelObject, "icoPlaceOrder", "zmdi zmdi-check");
        });

    </script>

}

