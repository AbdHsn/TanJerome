@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model IEnumerable<POSMVC.Models.PageModels.StockVM.ListStockVM>


@{
    ViewData["Title"] = "Stock";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //var productType = (SelectList)ViewBag.ProductType;
    //var selectedProductTypeName = (string)ViewBag.SelectedProductTypeName;
}

    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card mb-30">
                    <div class="card-body pb-0">
                        <div class="justify-content-between align-items-center mb-20">
                            <h6 class="card-title mb-0">Stock</h6>
                            <br />
                            <div class="row">
                                <div class="col-md-6">
                                                                     
                                    <div class="btn-group" role="group" aria-label="Button group with nested dropdown">
                                        <button type="button" class="btn btn-sm btn-outline-success" title="Single purchase entry" onclick='openModalCreateForm("mdlCreateForm","CreateForm","Stock","CreateStockAdjustment")'><i class="zmdi zmdi-collection-plus"></i> Stock Adjustment </button>
                                    </div>
                                </div>
                                <div class="col-md-6 float-right">
                                    <div class="input-group">
                                        <input class="form-control" name="ProductNo" type="search" placeholder="Search by Product Code" id="searchItem">
                                        @*<div class="btn-group mb-2 pr-2">
                                            <button type="button" class="btn btn-sm btn-fill-default  dropdown-toggle" data-toggle="dropdown" aria-expanded="false" style="height:40px;">View As : @selectedProductTypeName</button>
                                            <div class="dropdown-menu">
                                                <a class="dropdown-item @(selectedProductTypeName == "All" ? "disabled" : "")" href="/Items/Items?page=1&ddlId=0">All</a>
                                                @foreach (var item in productType)
                                                {
                                                    <a class="dropdown-item @(string.Equals(selectedProductTypeName, item.Text) ? "disabled" : "")" href="/Items/Items?page=1&ddlId=@item.Value">@item.Text</a>
                                                }
                                            </div>aa
                                        </div>*@


                                    </div>
                                </div>
                            </div>
                        </div>

                        @if (Model.Count() <= 0)
                        {
                            <div class="text-center">
                                <span class="badge font-11 badge-soft-purple"> There is no record found</span>

                            </div>
                        }
                        else
                        {
                            <div class="table-responsive order-stats">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Product</th>
                                            <th>Available Quantity</th>
                                            <th>Recent Update</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {
                                            <tr>
                                                <td width="30%">
                                                    <p class="mb-0">
                                                        <span class="font-11">Product Code: @item.Products.ProductCode</span>
                                                    </p>
                                                    <p class="mb-0">
                                                        <span class="font-11">Type: @item.ProductType.TypeName</span>
                                                    </p>
                                                </td>
                                                <td width="20%">
                                                    <div><small> @item.Stock.AvailableQuantity </small> </div>
                                                </td>
                                                <td width="30%">
                                                    <div><small> @item.Stock.LastUpdate </small> </div>
                                                </td>
                                                <td width="20%">
                                                    <a href="StockTrace?page=0&productId=@item.Products.Id" class="mr-2" data-toggle="tooltip" title="" data-original-title="Stock Trace"><i class="fa fa-history text-success font-18"></i></a>
                                                </td>
                                            </tr>
                                        }

                                    </tbody>
                                </table>
                            </div>
                            <div class="form-group pull-right">
                                @Html.PagedListPager((IPagedList)Model, page => Url.Action("Stock", new { page = page }),
                               new X.PagedList.Mvc.Common.PagedListRenderOptionsBase
                               {
                                   DisplayItemSliceAndTotal = true,
                                   ContainerDivClasses = new[] { "navigation", "btn btn-default" },
                                   LiElementClasses = new[] { "page-item" },
                                   PageClasses = new[] { "btn-success", "page-link" },
                                   ActiveLiElementClass = "btn-defult"
                               })
                            </div>
                        }

                    </div>


                </div>
            </div>
        </div>

        <div class="modal fade" id="mdlCreateForm" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-modal="false">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title mt-0 font-16" id="myLargeModalLabel">Create Stock Adjustment</h5>
                        <button type="button" class="close" onclick='closeModalCreateForm("mdlCreateForm","CreateForm")'>
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div id="CreateForm">
                            <div class="text-center">
                                <img src="~/ProjectImage/loading.gif" alt="Loading ..." />

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

@section Scripts{

    <script type="text/javascript">
        var lstItems = new Array();
        $(document).ready(function () {

            $('ul.pagination > li.disabled > a').addClass('page-link');

            $('#searchItem').autocomplete({
                minLength: 2,
                source: '/Items/ItemPurchaseSearch',
                select: function (event, ui) {
                    window.location.href = "/Items/SearchPurchaseResult?purchaseNo=" + ui.item.label;
                }
            });
        });

    </script>

}

