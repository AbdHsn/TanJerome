@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model IEnumerable<POSMVC.Models.PageModels.StockVM.ListStockTraceVM>


@{
    ViewData["Title"] = "Stock Trace";
    Layout = "~/Views/Shared/_Layout.cshtml";

    //var productType = (SelectList)ViewBag.ProductType;
    //var selectedProductTypeName = (string)ViewBag.SelectedProductTypeName;
}

    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card mb-30">
                    <div class="card-body pb-0">
                        <div class="justify-content-between align-items-center mb-20">
                            <h6 class="card-title mb-0">Stock Trace @( ViewBag.productId == 0 ? "Of All Products" : " Of " + Model.FirstOrDefault().Products.ProductCode )</h6>
                            <br />
                        </div>

                        @if (Model.Count() <= 0)
                        {
                            <div class="text-center">
                                <span class="badge font-11 badge-soft-purple"> There is no record found</span>

                            </div>
                        }
                        else
                        {
                            <div class="table-responsive order-stats">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Product</th>
                                            <th>Opening Quantity</th>
                                            <th>Current Quantity</th>
                                            <th>Closing Quantity</th>
                                            <th>Affected Amount</th>
                                            <th>Affected By</th>
                                            <th>Log Date & Time</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {
                                            <tr>
                                                <td width="30%">
                                                    <p class="mb-0">
                                                        <span class="font-11">Product Code: @item.Products.ProductCode</span>
                                                    </p>
                                                </td>
                                                <td width="10%">
                                                    <div><small> @item.StockTrace.OpeningQuantity </small> </div>
                                                </td>
                                                <td width="10%">
                                                    <div><small> @item.StockTrace.CurrentQuantity </small> </div>
                                                </td>
                                                <td width="10%">
                                                    <div><small> @item.StockTrace.ClosingQuantity </small> </div>
                                                </td>
                                                <td width="10%">
                                                    <div><small> @(item.StockTrace.CurrentQuantity - item.StockTrace.OpeningQuantity) </small> </div>
                                                </td>
                                                <td width="10%">
                                                    <div><small> @item.StockTrace.TableReference </small> </div>
                                                </td>
                                                <td width="20%">
                                                    <div><small> @item.StockTrace.CreatedDate </small> </div>
                                                </td>
                                            </tr>
                                        }

                                    </tbody>
                                </table>
                            </div>
                            <div class="form-group pull-right">
                                @Html.PagedListPager((IPagedList)Model, page => Url.Action("StockTrace", new { page = page }),
                               new X.PagedList.Mvc.Common.PagedListRenderOptionsBase
                               {
                                   DisplayItemSliceAndTotal = true,
                                   ContainerDivClasses = new[] { "navigation", "btn btn-default" },
                                   LiElementClasses = new[] { "page-item" },
                                   PageClasses = new[] { "btn-success", "page-link" },
                                   ActiveLiElementClass = "btn-defult"
                               })
                            </div>
                        }

                    </div>


                </div>
            </div>
        </div>

        <div class="modal fade" id="mdlCreateForm" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-modal="false">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title mt-0 font-16" id="myLargeModalLabel">Adjust Stock</h5>
                        <button type="button" class="close" onclick='closeModalCreateForm("mdlCreateForm","CreateForm")'>
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div id="CreateForm">
                            <div class="text-center">
                                <img src="~/ProjectImage/loading.gif" alt="Loading ..." />

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

@section Scripts{

    <script type="text/javascript">
        var lstItems = new Array();
        $(document).ready(function () {

            $('ul.pagination > li.disabled > a').addClass('page-link');

            $('#searchItem').autocomplete({
                minLength: 2,
                source: '/Items/ItemPurchaseSearch',
                select: function (event, ui) {
                    window.location.href = "/Items/SearchPurchaseResult?purchaseNo=" + ui.item.label;
                }
            });
        });

    </script>

}

