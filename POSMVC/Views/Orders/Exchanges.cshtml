@using X.PagedList.Mvc.Core;
@using X.PagedList;
@model POSMVC.Models.PageModels.OrdersVM.ExchangeVM


@{
    ViewData["Title"] = "Exchange";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">

    <div class="row">
        <div class="col-12 box-margin">
            <div class="card">
                <div class="card-body">

                    <div class="justify-content-between align-items-center mb-20">

                        <div class="row">
                            <div class="col-md-3">
                                <h6 class="card-title mb-0">Exchange Records</h6>
                                <button class="btn btn-sm btn-outline-success waves-effect waves-light mt-2 collapsed" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample"><i class="zmdi zmdi-collection-plus"></i> New Exchange </button>
                            </div>
                            <div class="col-md-9 float-right">
                                <form id="GetOrderByDateRange" asp-controller="Orders" asp-action="Exchanges" method="get">
                                    <label class="text-info mt-1">Please choose your desire criteria to get data.</label>
                                    <div class="input-group">
                                        @if (Model?.FromDate != null && Model?.ToDate != null)
                                        {
                                            <input name="FromDate" id="fromDate" class="form-control" value='@(Model == null ? "" : Model.FromDate.Value.ToShortDateString())' placeholder="From Date" type="text" data-provide="datepicker" data-date-autoclose="true" />
                                            <input name="ToDate" id="toDate" class="form-control" value='@(Model == null ? "" : Model.ToDate.Value.ToShortDateString())' placeholder="To Date" type="text" data-provide="datepicker" data-date-autoclose="true" />
                                        }
                                        else
                                        {
                                            <input name="FromDate" id="fromDate" class="form-control" placeholder="From Date" type="text" data-provide="datepicker" data-date-autoclose="true" />
                                            <input name="ToDate" id="toDate" class="form-control" placeholder="To Date" type="text" data-provide="datepicker" data-date-autoclose="true" />
                                        }
                                        <button type="submit" class="btn btn-fill-default" style="height:40px;">Get Data</button>

                                        <input id="filterOrder" class="form-control" value='@(Model == null ? "" : Model.OrderNo)' placeholder="Filter by Order No" type="search" />
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                    <div class="collapse" id="collapseExample" style="">
                        <div class="row justify-content-center">
                            <div class="col-8">
                                <input class="form-control c3-circle" name="orderNo" type="search" placeholder="Search by order no" id="searchOrder" style="border-radius: 1.25rem">

                            </div>
                        </div>
                    </div>

                    <div id="loadOrderToExchange">
       
                    </div>

                    <!-- Table -->
                    <div class="table-responsive">
                        @if (Model != null)
                        {
                            @if (Model.lstExchange.Count() <= 0)
                            {
                                <div class="text-center">
                                    <span class="badge font-11 badge-soft-purple"> There is no record found</span>

                                </div>
                            }
                            else
                            {
                                <label class="label-warning">Record Found : @Model.TotalRecords</label>
                                @if (Model.FromDate != null && Model.ToDate != null)
                                {
                                    <label class="label-info">Chosen Date Range: @Model.FromDate.Value.ToShortDateString() To @Model.ToDate.Value.ToShortDateString()</label>
                                }
                                if (Model.OrderNo != null)
                                {
                                    <label class="label-info">Order No: @Model.OrderNo</label>
                                }
                                <label class="label-warning">Total Earned: $@Model.TotalEarnAmount</label>
                                <label class="label-danger">Total Returned: $@Model.TotalReturnAmount</label>

                                <a href="#" id="lnkExport" class="badge badge-primary pull-right mx-1 px-3">Export</a>
                                @*<a id="lnkPrint" target="_blank" asp-action="PrintOrderByDateRange" asp-controller="Reports" asp-route-fromDate='@(Model.FromDate == null ? "" : Model.FromDate.Value.ToShortDateString())' asp-route-toDate='@(Model.ToDate == null ? "" : Model.ToDate.Value.ToShortDateString())' asp-route-orderNo='@Model.OrderNo' class="badge badge-primary pull-right mx-1 px-3">Print</a>*@
                                <table class="table table-borderless text-nowrap" id="tblExchange">
                                    <thead>
                                        <tr>
                                            <th>SL</th>
                                            <th>Exchange Details</th>
                                            <th>Customers</th>
                                            <th>Amounts</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.lstExchange)
                                        {
                                            <tr>
                                                <td width="5%">
                                                    <span class="font-13">@(Model.lstExchange.IndexOf(item)+1)</span>
                                                </td>
                                                <td width="25%">
                                                    <span class="font-13">Exchange No: @item.Exchange.ExchangeNo</span>
                                                    <p class="m-0"><small>Order No: @item.Order.OrderNo</small> </p>
                                                    <p class="m-0"><small>Return No: @item.OrderReturn.ReturnNo</small> </p>
                                                    <p class="m-0"><small>Exchange Made at @item.Exchange.ExchangeDate.Value.ToString("ddd, MMM dd yyyy")</small> </p>
                                                </td>
                                                <td width="25%">
                                                    <span class="font-13">@item.User.FirstName @item.User.LastName </span>
                                                    <p class="m-0"><small>Mobile: @item.User.MobileNo@(item.User.OtherContactNo != null? ", "+ item.User.OtherContactNo : "")</small> </p>
                                                </td>
                                                <td width="10%">
                                                    <p class="m-0"><small>Returned Amount: @item.OrderReturn.GrandTotal</small> </p>
                                                    <p class="m-0"><small>Earned Amount: @item.Order.GrandTotal</small> </p>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                        }
                    </div>
                </div>
            </div>
        </div> <!-- end col -->
    </div>
    <!-- end row -->
</div>


@section Scripts{

    <script src="~/js/table-to-excel.js"></script>
    <script src="~/js/bootstrap-datepicker.min.js"></script>
    <script type="text/javascript">



        $('#filterOrder').autocomplete({
            minLength: 2,
            source: '/Orders/OrderSearch',
            select: function (event, ui) {
                window.location.href = "/Orders/Exchanges?orderNo=" + ui.item.label;
            }

        });

        $('#searchOrder').autocomplete({
            minLength: 2,
            source: '/Orders/OrderSearch',
            select: function (event, ui)
            {
                var loadDivId = "loadOrderToExchange";
                var controller = "Orders";
                var action = "CreateExchange";
                var queryString = "orderNo=" + ui.item.label;
                var bg = `
                 <div class="text-center">
                            <p class="text-dark">
                               Please wait while processing...
                            </p>
                            <div class="spinner-grow text-primary " role="status"></div>
                            <div class="spinner-grow text-secondary " role="status"></div>
                            <div class="spinner-grow text-success " role="status"></div>
                            <div class="spinner-grow text-danger " role="status"></div>
                            <div class="spinner-grow text-warning " role="status"></div>
                            <div class="spinner-grow text-info " role="status"></div>
                            <div class="spinner-grow text-dark " role="status"></div>
                        </div>`;
                $('#' + loadDivId).empty();
                $('#' + loadDivId).append(bg);

                $('#' + loadDivId).load("/" + controller + "/" + action + "?" + queryString);

               // openModalWithQueryString("mdlCreateForm", "CreateForm", "Payments", "GetPaymentDetails", "orderNo=" + ui.item.label);
                //  openModalCreateForm("mdlCreateForm", "CreateForm", "Payments", "GetPaymentDetails");
                // window.location.href = "/Payments/GetOrderPayment?orderNo=" + ui.item.label;
            }
        });

        $("#ui-id-2").css('border-radius', '1.25rem');


        $('#searchOrder').on("input", function () {
            var loadDivId = "loadOrderToExchange";
            $('#' + loadDivId).empty();
        });

        function closePartialView() {
            var loadDivId = "loadOrderToExchange";
            $('#' + loadDivId).empty();
        }

        var currentDateTime = new Date();
        var getPreciseDateTime = currentDateTime.getDate() + "-"
            + (currentDateTime.getMonth() + 1) + "-"
            + currentDateTime.getFullYear() + "-"
            + currentDateTime.getHours() + ":"
            + currentDateTime.getMinutes() + ":"
            + currentDateTime.getSeconds();

        $('#lnkExport').on('click', () => {

            $("#tblExchange").table2excel({
                exclude: ".out",
                name: "Exchange",
                filename: "Exchange(" + getPreciseDateTime +").xls",
                preserveColors: true
            });
        });

    </script>

}

